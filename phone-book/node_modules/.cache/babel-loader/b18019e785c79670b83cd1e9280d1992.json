{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/projects/react/phone-book/src/Routes/ContactsPage/ContactsPage.js\";\nimport { Component } from 'react';\nimport ContactNav from './Components/ContactNav';\nimport Nav from './Components/Nav';\nimport Main from './Components/Main';\nimport AddContact from './Components/AddContact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const cookieName = document.cookie;\n      const cookieNameOnly = cookieName.replace('username=', '');\n      const url = 'http://127.0.0.1:8080/getContactInfo';\n      const postData = {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: cookieNameOnly\n        })\n      };\n      const fetchData = await fetch(url, postData);\n      const data = await fetchData.json();\n      console.log(data);\n      this.setState({\n        fields: data\n      });\n    };\n\n    this.submitForm = async e => {\n      e.preventDefault();\n      const cookieName = document.cookie;\n      const cookieNameOnly = cookieName.replace('username=', '');\n      const nameVal = await this.formName.value;\n      const streetVal = await this.formStreet.value;\n      const cityVal = await this.formCity.value;\n      const emailVal = await this.formEmail.value;\n      const url = 'http://127.0.0.1:8080/addContactInfo';\n      const postData = {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: cookieNameOnly,\n          name: nameVal,\n          street: streetVal,\n          city: cityVal,\n          email: emailVal\n        })\n      };\n      const fetchData = await fetch(url, postData);\n      const data = await fetchData.json();\n      console.log(data);\n      window.location.reload();\n    };\n\n    this.state = {\n      fields: null\n    };\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  render() {\n    if (!document.cookie) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"not logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.fields == null) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContactNavDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(ContactNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showHide\",\n          children: /*#__PURE__*/_jsxDEV(AddContact, {\n            name: name => this.formName = name,\n            street: street => this.formStreet = street,\n            city: city => this.formCity = city,\n            email: email => this.formEmail = email,\n            formSubmit: this.submitForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        content: this.state.fields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default index;","map":{"version":3,"sources":["/home/david/Documents/projects/react/phone-book/src/Routes/ContactsPage/ContactsPage.js"],"names":["Component","ContactNav","Nav","Main","AddContact","index","constructor","props","componentDidMount","cookieName","document","cookie","cookieNameOnly","replace","url","postData","method","headers","body","JSON","stringify","username","fetchData","fetch","data","json","console","log","setState","fields","submitForm","e","preventDefault","nameVal","formName","value","streetVal","formStreet","cityVal","formCity","emailVal","formEmail","name","street","city","email","window","location","reload","state","bind","render"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ContactNav from './Components/ContactNav'\nimport Nav from './Components/Nav'\nimport Main from './Components/Main'\nimport AddContact from './Components/AddContact'\n\nclass index extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            fields: null,\n        }\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentDidMount = async()=>{\n        const cookieName = document.cookie;\n        const cookieNameOnly = cookieName.replace('username=', '');\n        const url = 'http://127.0.0.1:8080/getContactInfo';\n        const postData = {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({username: cookieNameOnly})\n        };\n        const fetchData = await fetch(url, postData);\n        const data = await fetchData.json();\n        console.log(data);\n        this.setState({fields: data});\n    }\n\n    submitForm = async(e)=>{\n        e.preventDefault();\n        const cookieName = document.cookie;\n        const cookieNameOnly = cookieName.replace('username=', '');\n        const nameVal = await this.formName.value;\n        const streetVal = await this.formStreet.value;\n        const cityVal = await this.formCity.value;\n        const emailVal = await this.formEmail.value;\n        const url = 'http://127.0.0.1:8080/addContactInfo';\n        const postData = {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: cookieNameOnly,\n                name: nameVal,\n                street: streetVal,\n                city: cityVal,\n                email: emailVal,\n            })\n        };\n\n        const fetchData = await fetch(url, postData);\n        const data = await fetchData.json();\n        console.log(data);\n        window.location.reload();\n    }\n\n    render(){\n        if (!document.cookie){\n            return <h1>not logged in</h1>;\n        }\n        else if (this.state.fields == null) {\n            return <h1>loading</h1>\n        }\n        return(\n            <div className='ContactsPage'>\n                <Nav />\n                <div className='ContactNavDisplay'>\n                    <ContactNav />\n                    <div className='showHide'>\n                    <AddContact name={name=> this.formName = name} street={street=> this.formStreet = street} city={city=> this.formCity = city} email={email=> this.formEmail = email}  formSubmit={this.submitForm} />\n                    </div>\n                </div>\n                <Main content={this.state.fields}/>\n            </div>\n        )\n    }\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}