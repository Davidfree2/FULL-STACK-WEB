{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/projects/react/phone-book/src/Routes/SignUpInPage/SignUpInPage.js\";\nimport { Component } from 'react';\nimport Nav from './Components/Nav';\nimport phoneBottom from './Components/phoneBottom.jpg';\nimport SignUpIn from './Components/SignUpIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUpInPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.signIn = async () => {\n      const username = await this.userNameRef.value;\n      const password = await this.passWordRef.value;\n      const url = \"http://192.168.254.17:8080/findUserPassword\";\n      const postData = {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          clientUsername: username\n        })\n      };\n      const fetchUserPassword = await fetch(url, postData);\n      const data = await fetchUserPassword.text();\n      console.log(data);\n\n      if (data == password) {\n        //console.log(`${password} and ${data} are the same!`);\n        document.cookie = `username=${username}; expires=Sun, 1 Jan 2024 00:00:00 UTC; path=/`;\n        alert('your signed in!');\n      } else {\n        alert('username and password to not match');\n      }\n    };\n\n    this.signUp = async () => {\n      const username = await this.userNameRef.value;\n      const password = await this.passWordRef.value;\n      const url = \"http://192.168.254.17:8080/createUser\";\n      const postData = {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          newUsername: username,\n          newPassword: password\n        })\n      };\n      const fetchUserPassword = await fetch(url, postData);\n      document.cookie = `username=${username}; expires=Sun, 1 Jan 2024 00:00:00 UTC; path=/`;\n      alert('Your signed up!');\n    };\n\n    this.state = {\n      username: null\n    };\n    this.signIn = this.signIn.bind(this);\n    this.signUp = this.signUp.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SignUpInPage\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        username: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign in to enter Contacts Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SignUpIn, {\n        SignInButton: this.signIn,\n        LogInButton: this.signUp,\n        userNameRef: value => this.userNameRef = value,\n        passWordRef: value => this.passWordRef = value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phoneImg\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: phoneBottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignUpInPage;","map":{"version":3,"sources":["/home/david/Documents/projects/react/phone-book/src/Routes/SignUpInPage/SignUpInPage.js"],"names":["Component","Nav","phoneBottom","SignUpIn","SignUpInPage","constructor","props","signIn","username","userNameRef","value","password","passWordRef","url","postData","method","headers","body","JSON","stringify","clientUsername","fetchUserPassword","fetch","data","text","console","log","document","cookie","alert","signUp","newUsername","newPassword","state","bind","render"],"mappings":"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","sourcesContent":["import { Component} from 'react'\nimport Nav from './Components/Nav'\nimport phoneBottom from './Components/phoneBottom.jpg'\nimport SignUpIn from './Components/SignUpIn'\n\nclass SignUpInPage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: null,\n        }\n        this.signIn = this.signIn.bind(this);\n        this.signUp = this.signUp.bind(this);\n    }\n\n    signIn = async()=>{\n        const username = await this.userNameRef.value;\n        const password = await this.passWordRef.value;\n        const url = \"http://192.168.254.17:8080/findUserPassword\";\n        const postData = {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({clientUsername: username})\n        }\n        const fetchUserPassword = await fetch(url, postData);\n        const data = await fetchUserPassword.text();\n        console.log(data);\n        if (data == password){\n            //console.log(`${password} and ${data} are the same!`);\n            document.cookie = `username=${username}; expires=Sun, 1 Jan 2024 00:00:00 UTC; path=/`;\n            alert('your signed in!');\n        } else {\n            alert('username and password to not match');\n        }\n    }\n    \n    signUp = async()=>{\n        const username = await this.userNameRef.value;\n        const password = await this.passWordRef.value;\n        const url = \"http://192.168.254.17:8080/createUser\";\n        const postData = {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                newUsername: username,\n                newPassword: password,\n            })\n        }\n        const fetchUserPassword = await fetch(url, postData);\n        document.cookie = `username=${username}; expires=Sun, 1 Jan 2024 00:00:00 UTC; path=/`;\n        alert('Your signed up!');\n    }\n\n    render(){\n        return(\n            <div className='SignUpInPage'>\n                <Nav username={this.state.username} />\n                <h1>Sign in to enter Contacts Page</h1>\n                <SignUpIn SignInButton={this.signIn} LogInButton={this.signUp} userNameRef={value=> this.userNameRef = value} passWordRef={value=> this.passWordRef = value}/>\n                <div className='phoneImg'>\n                <img src={phoneBottom} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignUpInPage\n"]},"metadata":{},"sourceType":"module"}